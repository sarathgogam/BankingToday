import java.util.Scanner;

public class Client {

	//private static final String AccNo = null;
	private String userName;
    private String passWord;
	 private String accountNumber;
	 private double balance;
	 private String transactionDetails;
	 
	 
//	public Client(String userName, String passWord, String accountNumber, double balance) {
//		super();
//		this.userName = userName;
//		this.passWord = passWord;
//		this.accountNumber = accountNumber;
//		this.balance = balance;
//	}
	
//	public Client(String accountNumber, String userName, String passWord, double balance) {
//		
//		super();
//		this.userName = userName;
//		this.passWord = passWord;
//		this.accountNumber = accountNumber;
//		this.balance = balance;
//	}
	 
	 
//	 public Client(String userName, String passWord, String accountNumber, double balance, String transactionDetails) {
//			super();
//			this.userName = userName;
//			this.passWord = passWord;
//			this.accountNumber = accountNumber;
//			this.balance = balance;
//			this.transactionDetails = transactionDetails;
//		}
//	 
	 public Client(String accountNumber, String userName, String passWord, double balance,
			String transactionDetails) {
		
		 this.userName = userName;
			this.passWord = passWord;
			this.accountNumber = accountNumber;
			this.balance = balance;
			this.transactionDetails = transactionDetails;
	}

	public String getUserName() {
			return userName;
		}


		public void setUserName(String userName) {
			this.userName = userName;
		}


		public String getPassWord() {
			return passWord;
		}


		public void setPassWord(String passWord) {
			this.passWord = passWord;
		}


		public String getAccountNumber() {
			return accountNumber;
		}


		public void setAccountNumber(String accountNumber) {
			this.accountNumber = accountNumber;
		}


		public double getBalance() {
			return balance;
		}


		public void setBalance(double balance) {
			this.balance = balance;
		}


		public String getTransactionDetails() {
			return transactionDetails;
		}

//	public String getUserName() {
//		return userName;
//	}
//	
//	public void setUserName(String userName) {
//		this.userName = userName;
//	}
//
//	public String getPassWord() {
//		return passWord;
//	}
//
//	public void setPassWord(String passWord) {
//		this.passWord = passWord;
//	}
//
//	public String getAccountNumber() {
//		return accountNumber;
//	}
//
//	public void setAccountNumber(String accountNumber) {
//		this.accountNumber = accountNumber;
//	}
//
//	public double getBalance() {
//		return balance;
//	}
//
//	public void setBalance(double balance) {
//		this.balance = balance;
//	}

	
	
	
	public static void login(String cname, String cpwd) {
		
		boolean AccNoNow=false;
		
		if ((Admin.clist.get(cname)) != null) { 
			  
			AccNoNow = true;
			if((AccNoNow)&&(cpwd.equals(Admin.clist.get(cname).getPassWord()))){
            	System.out.println("login Succesfull");
            	display(cname);
            }
            else
            	System.out.println("login unsuccesssful");
            
		}  
		else{
			System.out.println("check your details");
		}
		
	}

	


	public void setTransactionDetails(String transactionDetails) {
		this.transactionDetails = transactionDetails;
	}


	public static void display(String cname) {
		
		int che;
		do{
		System.out.println("please select your option");
		System.out.println("1.deposit");
		System.out.println("2.withdraw");
		System.out.println("3.fund Transfer");
		System.out.println("4.checkBalance");
		System.out.println("5.logout");
		System.out.println("6.transactionDetails");
		System.out.println("enter option");
		@SuppressWarnings("resource")
		Scanner sc= new Scanner(System.in);
		int ch=sc.nextInt();

		switch(ch){
		case 1 : System.out.println("enter the deposit money");
		         double de=sc.nextDouble();
		          deposit(de,AccNo);
		          break;
		case 2 : System.out.println("enter the withdraw money");
	             double widr=sc.nextDouble();
	             withDraw(widr,AccNo);    
	             break;
		case 3 :  System.out.println("enter the account number and amount");
		          String acno=sc.next();
		          double amut=sc.nextDouble();
		          fundTransfer(acno,amut,AccNo);
		          break;
		case 4 : checkBalance(AccNo);
		            break;
		
		case 5 :
			Admin a = new Admin();
			a.logout();
//			logout();
//		 default:System.out.println("enter correct option");
		case 6:
			transactionPrint(AccNo);
			break;
		}
		
	 System.out.println("u want to continue 1=yes 2=no");
	 che=sc.nextInt();
	 }while(che==1);
		
	}

	public static void transactionPrint(String accNo) {
		
		System.out.println(Admin.clist.get(accNo).getUserName());
		System.out.println(Admin.clist.get(accNo).getTransactionDetails());
	}

	public static void transaction(String AccNo,String str) {
  
		String bal1 =Admin.clist.get(AccNo).getTransactionDetails();

		String s=" ";
		s=s+bal1;
//		bal1=bal1+bal1.concat(str);
		Admin.clist.get(AccNo).setTransactionDetails(bal1);
	}
//	public static void transaction1(String AccNo,String str) {
//		  
//		String bal1 =Admin.clist.get(AccNo).getTransactionDetails();
//
//		bal1=bal1.concat(str);
//		Admin.clist.get(AccNo).setTransactionDetails(bal1);
//	}

	public static void logout() {
		
		System.out.println("logout successfully");
		
	}

	public static void checkBalance(String AccNo) {
		
		System.out.println("your account balance is");
		System.out.println(Admin.clist.get(AccNo).getBalance());
		
	}

	public static void fundTransfer(String acno, double amut, String AccNo) {
		
		double balance =Admin.clist.get(AccNo).getBalance();
	      if(balance<amut)
	      {
	    	  System.out.println("your balance is not sufficient");
	    	  
	      }
	      if ( (Admin.clist.get(acno)) != null){
	    	  double balance2=Admin.clist.get(acno).getBalance();
	    	  balance2=balance2+amut;
	    	  balance=balance-amut;
	    	  String str=" ";
	    	  str=str+amut;
	    	  transaction(AccNo,str);
	    	  Admin.clist.get(acno).setBalance(balance2);
	    	  Admin.clist.get(AccNo).setBalance(balance);
	    	  System.out.println("succesfully transferred");
	      }
	      else{
	    	  System.out.println("account number doesn't exists");
	      }
		
	}

	public static void withDraw(double widr, String AccNo) {
		
		double balance=Admin.clist.get(AccNo).getBalance();
		if((balance-widr)>0){
			balance= balance-widr;
			String str=" ";
			str=str+widr;
			transaction(AccNo,str);
		Admin.clist.get(AccNo).setBalance(balance);
		System.out.println("withdraw amount is....:"+widr);
		//System.out.println("your new balance is:"+Admin.clist.get(AccNo).getBalance());
		checkBalance(AccNo);
		}
		else
			System.out.println("insufficient funds");
	}

	public static void deposit(double de, String AccNo) {
		double bal=Admin.clist.get(AccNo).getBalance();
		bal=bal+de;
		String str="";
		str=str+de;
		transaction(AccNo,str);
		Admin.clist.get(AccNo).setBalance(bal);
		System.out.println("deposit amount is.....:"+de);
		checkBalance(AccNo);
		
		
	}

}
